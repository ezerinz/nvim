-- startup screen Ó¨∞
return {
	"goolord/alpha-nvim",
	event = "VimEnter",
	dependencies = {
		"nvim-tree/nvim-web-devicons",
	},
	config = function()
		local alpha = require("alpha")
		local dashboard = require("alpha.themes.dashboard")
		math.randomseed(os.time())
		local logo = {
			{
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¨‚°õ‚£ø‚£ø‚£ø‚£Ø‚¢ª",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ª‚£ø‚£ø‚¢ü‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Æ‚°ª‚£ø‚£ø‚£ß",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ª‚°´‚£¢‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ú‚¢ª‚£ø",
				"‚£ø‚£ø‚°è‚£ø‚£ø‚£®‚£ù‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ï‚†∏‚£õ‚£©‚£•‚£Ñ‚£©‚¢ù‚£õ‚°ø‚†ø‚£ø‚£ø‚£Ü‚¢ù",
				"‚£ø‚£ø‚¢°‚£∏‚£ø‚£è‚£ø‚£ø‚£∂‚£Ø‚£ô‚†´‚¢∫‚£ø‚£∑‚°à‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚¢ø‚£ü‚£í‚£ã‚£ô‚†ä",
				"‚£ø‚°è‚°ø‚£õ‚£ç‚¢ø‚£Æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚¢±‚£æ‚£ø‚£ø‚£ø‚£ù‚°Æ‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†õ‚£ã‚£ª‚£ø‚£ø‚£ø‚£ø",
				"‚¢ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ï‚£°‚£¥‚£∂‚£ø‚£ø‚£ø‚°ü‚£ø‚£ø‚£ø",
				"‚£¶‚°∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚£ø‚£ø‚£ø",
				"‚¢õ‚†∑‚°π‚£ø‚†ã‚£â‚£†‚£§‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚¢π‚£ø‚£ø",
				"‚£∑‚°ù‚£ø‚°û‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†ã‚†Å‚£†‚£§‚£§‚£¶‚£Ω‚£ø‚£ø‚£ø‚°ø‚†ã‚†ò‚£ø‚£ø",
				"‚£ø‚£ø‚°π‚£ø‚°º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£π‚°ø‚†ü‚†â‚°Ä‚†Ñ‚†Ñ‚¢ø‚£ø",
				"‚£ø‚£ø‚£ø‚£Ω‚£ø‚£º‚£õ‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£ø‚†ø‚¢ü‚£ª‚°Ω‚¢ö‚£§‚°û‚†Ñ‚†Ñ‚†Ñ‚¢∏‚£ø",
			},

			{
				"‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä",
				"‚£á‚£ø‚†ò‚£ø‚£ø‚£ø‚°ø‚°ø‚£ü‚£ü‚¢ü‚¢ü‚¢ù‚†µ‚°ù‚£ø‚°ø‚¢Ç‚£º‚£ø‚£∑‚£å‚†©‚°´‚°ª‚£ù‚†π‚¢ø‚£ø‚£∑",
				"‚°Ü‚£ø‚£Ü‚†±‚£ù‚°µ‚£ù‚¢Ö‚†ô‚£ø‚¢ï‚¢ï‚¢ï‚¢ï‚¢ù‚£•‚¢í‚†Ö‚£ø‚£ø‚£ø‚°ø‚£≥‚£å‚†™‚°™‚£°‚¢ë‚¢ù‚£á",
				"‚°Ü‚£ø‚£ø‚£¶‚†π‚£≥‚£≥‚£ï‚¢Ö‚†à‚¢ó‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢à‚¢Ü‚†ü‚†ã‚†â‚†Å‚†â‚†â‚†Å‚†à‚†º‚¢ê‚¢ï‚¢Ω",
				"‚°ó‚¢∞‚£∂‚£∂‚£¶‚£ù‚¢ù‚¢ï‚¢ï‚†Ö‚°Ü‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚£¥‚†è‚£†‚°∂‚†õ‚°â‚°â‚°õ‚¢∂‚£¶‚°Ä‚†ê‚£ï‚¢ï",
				"‚°ù‚°Ñ‚¢ª‚¢ü‚£ø‚£ø‚£∑‚£ï‚£ï‚£Ö‚£ø‚£î‚£ï‚£µ‚£µ‚£ø‚£ø‚¢†‚£ø‚¢†‚£Æ‚°à‚£å‚†®‚†Ö‚†π‚£∑‚°Ä‚¢±‚¢ï",
				"‚°ù‚°µ‚†ü‚†à‚¢Ä‚£Ä‚£Ä‚°Ä‚†â‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£º‚£ø‚¢à‚°ã‚†¥‚¢ø‚°ü‚£°‚°á‚£ø‚°á‚°Ä‚¢ï",
				"‚°ù‚†Å‚£†‚£æ‚†ü‚°â‚°â‚°â‚†ª‚£¶‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†∏‚£ø‚£¶‚£•‚£ø‚°á‚°ø‚£∞‚¢ó‚¢Ñ",
				"‚†Å‚¢∞‚£ø‚°è‚£¥‚£å‚†à‚£å‚†°‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¨‚£â‚£â‚£Å‚£Ñ‚¢ñ‚¢ï‚¢ï‚¢ï",
				"‚°Ä‚¢ª‚£ø‚°á‚¢ô‚†Å‚†¥‚¢ø‚°ü‚£°‚°Ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£µ‚£µ‚£ø",
				"‚°ª‚£Ñ‚£ª‚£ø‚£å‚†ò‚¢ø‚£∑‚£•‚£ø‚†á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£∑‚¢Ñ‚†ª‚£ø‚£ü‚†ø‚†¶‚†ç‚†â‚£°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£¶‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü",
				"‚°ï‚°ë‚£ë‚£à‚£ª‚¢ó‚¢ü‚¢û‚¢ù‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∏‚£ø‚†ø‚†É‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚£†",
				"‚°ù‚°µ‚°à‚¢ü‚¢ï‚¢ï‚¢ï‚¢ï‚£µ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ã‚£Ä‚£à‚†ô",
				"‚°ù‚°µ‚°ï‚°Ä‚†ë‚†≥‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚¢â‚°†‚°≤‚°´‚°™‚°™‚°£",
			},
			{
				"           ‚£Ä‚£Ä‚£Ä‚£Ä           ",
				"     ‚¢Ä‚£§‚£∂‚†ø‚†õ‚†õ‚†â‚†â‚†â‚†â‚†õ‚†ª‚¢ø‚£∂‚£§      ",
				"‚†Ä‚†Ä ‚£†‚£æ‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£∑‚£Ñ   ",
				"‚†Ä ‚£æ‚†ü‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£∂  ",
				" ‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£∑ ",
				"‚£∏‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£Ñ‚†Ä‚†Ä‚¢ø‚£Ü",
				"‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£Ä‚¢Ä‚£†‚£ø‚†Ä‚†Ä‚¢∏‚£ø",
				"‚¢π‚£∑‚£Ä‚£Ä‚£Ä‚£§‚£¥‚£∂‚£ø‚£ø‚£∑‚£ô‚£ª‚£ø‚£ø‚°ø‚¢ã‚£ø‚£ø‚°ø‚†ü‚†Å‚†Ä‚†Ä‚£æ‚°è",
				"‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†ª‚†ª‚†Ç‚†Ä‚†Ä‚¢∞‚£ø ",
				" ‚†à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†¨‚†â‚†ô‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚°ø  ",
				"   ‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚†ã   ",
				"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£§‚£¥‚£æ‚†õ‚†â     ",
				"  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†à          ",
			},

			{
				"‚°Ü‚£ê‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚†Ö‚¢ó‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚†ï‚†ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï",
				"‚¢ê‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚£ï‚¢ï‚¢ï‚†ï‚†Å‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚†Ö‚°Ñ‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï",
				"‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚†Ö‚¢ó‚¢ï‚†ï‚£†‚†Ñ‚£ó‚¢ï‚¢ï‚†ï‚¢ï‚¢ï‚¢ï‚†ï‚¢†‚£ø‚†ê‚¢ï‚¢ï‚¢ï‚†ë‚¢ï‚¢ï‚†µ‚¢ï",
				"‚¢ï‚¢ï‚¢ï‚¢ï‚†Å‚¢ú‚†ï‚¢Å‚£¥‚£ø‚°á‚¢ì‚¢ï‚¢µ‚¢ê‚¢ï‚¢ï‚†ï‚¢Å‚£æ‚¢ø‚£ß‚†ë‚¢ï‚¢ï‚†Ñ‚¢ë‚¢ï‚†Ö‚¢ï",
				"‚¢ï‚¢ï‚†µ‚¢Å‚†î‚¢Å‚£§‚£§‚£∂‚£∂‚£∂‚°ê‚£ï‚¢Ω‚†ê‚¢ï‚†ï‚£°‚£æ‚£∂‚£∂‚£∂‚£§‚°Å‚¢ì‚¢ï‚†Ñ‚¢ë‚¢Ö‚¢ë",
				"‚†ç‚£ß‚†Ñ‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£î‚¢ï‚¢Ñ‚¢°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°ë‚¢ï‚¢§‚†±‚¢ê",
				"‚¢†‚¢ï‚†Ö‚£æ‚£ø‚†ã‚¢ø‚£ø‚£ø‚£ø‚†â‚£ø‚£ø‚£∑‚£¶‚£∂‚£Ω‚£ø‚£ø‚†à‚£ø‚£ø‚£ø‚£ø‚†è‚¢π‚£∑‚£∑‚°Ö‚¢ê",
				"‚£î‚¢ï‚¢•‚¢ª‚£ø‚°Ä‚†à‚†õ‚†õ‚†Å‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚†à‚†õ‚†õ‚†Å‚†Ñ‚£º‚£ø‚£ø‚°á‚¢î",
				"‚¢ï‚¢ï‚¢Ω‚¢∏‚¢ü‚¢ü‚¢ñ‚¢ñ‚¢§‚£∂‚°ü‚¢ª‚£ø‚°ø‚†ª‚£ø‚£ø‚°ü‚¢Ä‚£ø‚£¶‚¢§‚¢§‚¢î‚¢û‚¢ø‚¢ø‚£ø‚†Å‚¢ï",
				"‚¢ï‚¢ï‚†Ö‚£ê‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚£ø‚£ø‚°Ñ‚†õ‚¢Ä‚£¶‚†à‚†õ‚¢Å‚£º‚£ø‚¢ó‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚°è‚£ò‚¢ï",
				"‚¢ï‚¢ï‚†Ö‚¢ì‚£ï‚£ï‚£ï‚£ï‚£µ‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ï‚¢ï‚¢ï‚¢ï‚¢ï‚°µ‚¢Ä‚¢ï‚¢ï",
				"‚¢ë‚¢ï‚†É‚°à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢É‚¢ï‚¢ï‚¢ï",
				"‚£Ü‚¢ï‚†Ñ‚¢±‚£Ñ‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚¢Å‚¢ï‚¢ï‚†ï‚¢Å",
				"‚£ø‚£¶‚°Ä‚£ø‚£ø‚£∑‚£∂‚£¨‚£ç‚£õ‚£õ‚£õ‚°õ‚†ø‚†ø‚†ø‚†õ‚†õ‚¢õ‚£õ‚£â‚£≠‚£§‚£Ç‚¢ú‚†ï‚¢ë‚£°‚£¥‚£ø",
			},
			{
				"‚†Ñ‚†Ñ‚¢ø‚£á‚†Ñ‚†Ñ‚†ò‚£Ü‚¢Ä‚£º‚£ø‚£ø‚£ø‚£ø‚¢ø‚°ø‚£ø‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚¢ß‚°≤‚£ø‚¢∑‚¢¶‚°Ä",
				"‚†Ñ‚†Ñ‚†à‚£ø‚†Ñ‚†Ñ‚†Ñ‚¢ô‚¢û‚¢ø‚£ø‚¢π‚¢ø‚£¶‚¢è‚£±‚¢ø‚†ò‚£ø‚£ù‚†π‚¢ø‚£ø‚°Ω‚£ø‚£ø‚£è‚£Ü‚¢ø‚£ø‚°û‚†Å",
				"‚†Ñ‚†Ñ‚†Ñ‚¢ª‚°Ä‚†Ñ‚†Ñ‚†à‚£æ‚°∏‚°è‚¢∏‚°æ‚£¥‚£ø‚£ø‚£∂‚£º‚£é‚¢µ‚¢Ä‚°õ‚£ø‚£∑‚°ô‚°ª‚¢ª‚°¥‚†®‚†®‚†ñ‚†É",
				"‚†Ñ‚†Ñ‚†Ñ‚†à‚£ß‚¢Ä‚°¥‚†ä‚¢π‚†Å‚°á‚†à‚¢£‚£ø‚£ø‚£ø‚£ø‚£¶‚£ø‚£∑‚£ú‚°≥‚£ù‚¢ß‚¢É‚¢£‚£º‚¢Å‚†ò‚†Ü‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢π‚°á‚†Ñ‚£†‚†î‚†ö‚£Ö‚†Ñ‚¢∞‚£∂‚£¶‚£≠‚£ø‚£ø‚£ø‚°ø‚†ü‚†ø‚£∑‚°ß‚†Ñ‚£ò‚£ü‚£∏‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢∑‚†é‚†Ñ‚†Ñ‚†Ñ‚£º‚£¶‚†ª‚£ø‚£ø‚°ü‚†õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚°æ‚¢±‚£ø‚°è‚†∏‚°è‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†∏‚°Ñ‚†Ñ‚°Ñ‚†Ñ‚£ø‚¢ß‚¢ó‚†å‚†ª‚£á‚†ø‚†ø‚£∏‚£ø‚£ø‚°ü‚°ê‚£ø‚†ü‚¢∞‚£á‚†á‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£†‚°Ü‚†Ñ‚†É‚¢†‚†è‚£§‚¢Ä‚¢¢‚°∞‚£≠‚£õ‚°â‚†©‚†≠‚°Ö‚£æ‚¢≥‚°¥‚°Ä‚¢∏‚£ø‚°Ü‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚†Ñ‚¢Ä‚£∂‚°ü‚£Ω‚†º‚¢Ä‚°ï‚¢Ä‚†ò‚†∏‚¢Æ‚°≥‚°ª‚°ç‚°∑‚°Ü‚†§‚†§‚†≠‚¢∏‚¢≥‚£∑‚¢∏‚°ü‚£∑‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
				"‚†Ñ‚†Ñ‚£¥‚£ø‚¢´‚¢û‚£µ‚¢è‚°û‚†Ñ‚¢∏‚†Ñ‚£õ‚£ó‚†©‚†Ñ‚£∞‚£ö‚†í‚†Ç‚£Ä‚°Ä‚¢∏‚¢∏‚£ø‚£ß‚†á‚°º‚£ß‚†Ñ‚†Ñ‚†Ñ",
				"‚¢†‚£æ‚¢ü‚°¥‚¢´‚°æ‚£±‚¢ü‚†Ñ‚†Ñ‚¢∏‚†Ñ‚¢à‚°ì‚°Æ‚°¶‚°¨‚†Ω‚°†‚†Ñ‚†î‚†Ñ‚¢∏‚†à‚£ø‚£ø‚°Ñ‚£∑‚¢π‚£Ü‚†Ñ‚†Ñ",
				"‚°ø‚¢Å‚†û‚¢Ä‚£ø‚¢£‚†á‚£ø‚†Ñ‚†Ñ‚†∏‚¢Ä‚¢≥‚¢£‚£ó‚£ø‚°á‚°î‚†Ñ‚†î‚†Ñ‚†Ñ‚¢†‚†Ñ‚†π‚£ø‚£∑‚°ù‚£ß‚¢ª‚£Ü ",
			},
		}
		function random_logo(ascii)
			random_index = math.random(1, #ascii)
			return ascii[random_index]
		end
		dashboard.section.header.val = random_logo(logo)
		dashboard.section.header.opts.hl = "Error"

		local stats = require("lazy").stats()
		local heading = {
			type = "text",
			val = "Neovim loaded " .. stats.count .. " plugins Ôñï",
			opts = {
				position = "center",
				hl = "Error",
			},
		}

		local function getGreeting(name)
			local tableTime = os.date("*t")
			local hour = tableTime.hour
			local greetingsTable = {
				[1] = "Ôà∂  Sleep well",
				[2] = "Óçå  Good morning",
				[3] = "Óåç  Good afternoon",
				[4] = "Óçç  Good evening",
				[5] = "Ô™ì Good night",
			}
			barkiri = "‚îÄ‚îÄ‚îÄ‚îÄ "
			barkanan = " ‚îÄ‚îÄ‚îÄ‚îÄ"
			local greetingIndex = 0
			if hour == 23 or hour < 7 then
				greetingIndex = 1
				barkiri = "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ "
				barkanan = " ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
			elseif hour < 12 then
				greetingIndex = 2
			elseif hour >= 12 and hour < 18 then
				greetingIndex = 3
				barkiri = "‚îÄ‚îÄ‚îÄ "
				barkanan = " ‚îÄ‚îÄ‚îÄ"
			elseif hour >= 18 and hour < 21 then
				greetingIndex = 4
			elseif hour >= 21 then
				greetingIndex = 5
				barkiri = "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ "
				barkanan = " ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
			end

			return barkiri .. greetingsTable[greetingIndex] .. ", " .. name .. barkanan
		end

		local userName = "Ezerinz"
		local greeting = "‚îå‚îÄ" .. getGreeting(userName) .. "‚îÄ‚îê"

		local greetHeading = {
			type = "text",
			val = greeting,
			opts = {
				position = "center",
				hl = "Error",
			},
		}

		local function button(sc, txt, keybind, keybind_opts)
			local b = dashboard.button(sc, txt, keybind, keybind_opts)
			b.opts.hl = "Comment"
			b.opts.hl_shortcut = "Error"
			return b
		end

		colormenu_path = vim.fn.expand("$HOME/.config/nvim/lua/util/colorscheme.lua")

		dashboard.section.buttons.val = {
			button("t", "Ôêì " .. " File Explorer", "<cmd>ene <BAR> Neotree toggle<CR>"),
			button("f", "ÔÉÖ " .. " Find File", ":Telescope find_files <CR>"),
			button("r", "Ôòà " .. " Recent Files", ":Telescope oldfiles <CR>"),
			button("g", "ÔÄ¢ " .. " Find Text", ":Telescope live_grep <CR>"),
			button("c", "üñå" .. " Change Colorscheme", ":luafile " .. colormenu_path .. "<CR>"),
			button("l", "Ô¶±" .. " Lazy", ":Lazy<CR>"),
			button("q", "Ôê¶ " .. " Quit", ":qa<CR>"),
		}
		dashboard.section.buttons.opts.spacing = 0

		local function footer()
			local datetime = os.date("Ôëï %d/%m/%Y ")
			local version = vim.version()
			local nvim_version_info = " Ôîß v" .. version.major .. "." .. version.minor .. "." .. version.patch

			return {
				type = "text",
				val = "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ "
					.. datetime
					.. "|"
					.. nvim_version_info
					.. " ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ",
				opts = {
					position = "center",
					hl = "Comment",
				},
			}
		end

		local quote = "First, solve the problem. Then, write the code."
		local quoteAuthor = "John Johnson"

		local fortune = {
			type = "text",
			val = quote,
			opts = {
				position = "center",
				hl = "Comment",
			},
		}

		local fortune1 = {
			type = "text",
			val = "                                -" .. quoteAuthor,
			opts = {
				position = "center",
				hl = "Comment",
			},
		}

		local opts = {
			layout = {
				{ type = "padding", val = 1 },
				dashboard.section.header,
				greetHeading,
				heading,
				{ type = "padding", val = 2 },
				dashboard.section.buttons,
				footer(),
				{ type = "padding", val = 2 },
				fortune,
				{ type = "padding", val = 1 },
				fortune1,
			},
			opts = {
				margin = 45,
			},
		}
		alpha.setup(opts)
		vim.cmd([[ autocmd FileType alpha setlocal nofoldenable]])
		vim.api.nvim_create_autocmd("User", {
			pattern = "LazyVimStarted",
			callback = function()
				local stats = require("lazy").stats()
				local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
				ms = string.format("%.2f", ms)
				heading.val =
					"‚îî‚îÄ‚îÄ Ô£ï " .. stats.count .. " plugins loaded in " .. ms .. "ms ‚îÄ‚îÄ‚îò",
					pcall(vim.cmd.AlphaRedraw)
			end,
		})
	end,
}
